<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sally Liu&#39;s Blog</title>
  
  <subtitle>文青的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sally6.github.io/"/>
  <updated>2018-01-26T08:22:57.941Z</updated>
  <id>https://sally6.github.io/</id>
  
  <author>
    <name>文青</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Project Euler Problem 24</title>
    <link href="https://sally6.github.io/2018/01/25/2018-01-25-Project%20Euler%20Problem%2024/"/>
    <id>https://sally6.github.io/2018/01/25/2018-01-25-Project Euler Problem 24/</id>
    <published>2018-01-24T16:00:00.000Z</published>
    <updated>2018-01-26T08:22:57.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem-24"><a href="#Problem-24" class="headerlink" title="Problem 24"></a>Problem 24</h2><h3 id="字典序排列"><a href="#字典序排列" class="headerlink" title="字典序排列"></a>字典序排列</h3><p>排列指的是将一组物体进行有顺序的放置。例如，3124是数字1、2、3、4的一个排列。如果把所有排列按照数字大小或字母先后进行排序，我们称之为字典序排列。0、1、2的字典序排列是：</p><p>012   021   102   120   201   210</p><p>数字0、1、2、3、4、5、6、7、8、9的字典序排列中第一百万位的排列是什么？</p><hr><h3 id="Lexicographic-permutations"><a href="#Lexicographic-permutations" class="headerlink" title="Lexicographic permutations"></a>Lexicographic permutations</h3><p>Lexicographic permutations<br>A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:</p><p>012   021   102   120   201   210</p><p>What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?</p><hr><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><p>看到这道题时，我第一反应是把0-9数字的所有排列取出，然后取出第一百万个就行。当初在某人博客（忘记是哪个博客了，当时只记录下了代码，在这里借鉴一下）上看到过用php去写获取排列的函数，如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从$input数组中取$m个数的排列算法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">perm</span><span class="params">($input,$m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($m==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($input <span class="keyword">as</span> $item)</span><br><span class="line">        &#123;</span><br><span class="line">            $result[]=<span class="keyword">array</span>($item);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($input);$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        $nextinput=array_merge(array_slice($input,<span class="number">0</span>,$i),array_slice($input,$i+<span class="number">1</span>));</span><br><span class="line">        $nextresult=perm($nextinput,$m<span class="number">-1</span>);  </span><br><span class="line">        <span class="keyword">foreach</span>($nextresult <span class="keyword">as</span> $one)</span><br><span class="line">        &#123;</span><br><span class="line">            $result[]=array_merge(<span class="keyword">array</span>($input[$i]),$one);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当我通过这个函数去获取0-9的所有排列时，问题出来了，执行脚本时会报内存溢出的错误，无法获取到第一百万位的排列。。。</p><p>可以看出，这个函数只能获取小数量的所有排列。经过我绞尽脑汁地思考后，还是没能通过php脚本得到想要的结果。花去了大半天的时间，还是没能解除这道题来。就在我要放弃这道题时，我突然想到，不如用数学方式去分析解答这道题，不一会儿功夫还真被我给解出来的，哈哈哈。。。</p><p>啰嗦半天了，开始切入正题。我的数学解题思路是，一步一步把每个位置上的数值给取出来。</p><p>第一位：<br>总共10个数，定下第一位</p><pre><code>//其他9个数的排列数有 echo 9*8*7*...*2*1; //362880echo floor(1000000/362880); //2echo 1000000%362880; //274240</code></pre><p>根据上面计算得出了第一位数为0-9这些数中的第3位，即 2</p><p>第二位：<br>已确定第一位是2，剩余的数则是 0 1 3 4 5 6 7 8 9，在这些数中确定第二位。在此之前已排除了（362880*2）个排列，在剩余排列中取第274240位排列</p><pre><code>//其他8个数的排列数有echo 8*7*...*2*1; //40320echo floor(274240/40320); //6echo 274240%40320; //32320</code></pre><p>根据上面计算得出第二位数为剩余数的第7位，即7</p><p>… …</p><p>以此类推得出第六位 为1</p><p>第七位：<br>已确定前面6位分别为 2 7 8 3 9 1，剩余4位数为0 4 5 6，</p><pre><code>//其他3位数的排列数为 echo 3*2*1; //6echo floor(16/6); //2echo 16%6;  //4</code></pre><p>根据上面计算得出第七位为剩余数的第3位，即 5</p><p>第8位：<br>剩余的数有0 4 6</p><pre><code>//其他两位的排列数为echo 2*1; //2echo floor(4/2); //2echo 4%2; //0</code></pre><p>根据上面计算，取两次两位数的排列，刚好能取到第一百万位，即 第八位为4，最后两位则为 60</p><p>根据以上数学分析，再写php脚本就容易多了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">product</span><span class="params">($num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> $num * product($num<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//取数组$input中数的第$n位排列数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_num</span><span class="params">($input,$n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> $fetch_arr = <span class="keyword">array</span>();</span><br><span class="line">    $len = count($input);</span><br><span class="line">    $m = $len - <span class="number">1</span>;</span><br><span class="line">    $tmp_num = product($m);</span><br><span class="line"></span><br><span class="line">    $index_k = floor($n/$tmp_num);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($n%$tmp_num==<span class="number">0</span>)&#123;</span><br><span class="line">        $fetch_arr[] = $input[$index_k<span class="number">-1</span>];</span><br><span class="line">        $nextinput = array_merge(array_slice($input, <span class="number">0</span>,$index_k<span class="number">-1</span>),array_slice($input, $index_k));</span><br><span class="line">        $fetch_arr = array_merge($fetch_arr,array_reverse($nextinput));</span><br><span class="line">        <span class="keyword">return</span> $fetch_arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $nextinput = array_merge(array_slice($input, <span class="number">0</span>,$index_k),array_slice($input, $index_k+<span class="number">1</span>));</span><br><span class="line">    $fetch_arr[] = $input[$index_k];</span><br><span class="line">    $nextn = $n%$tmp_num;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> get_num($nextinput,$nextn);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$input = <span class="keyword">array</span>(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line">$n = <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line">$arr = get_num($input,$n);</span><br><span class="line">print_r($arr);</span><br></pre></td></tr></table></figure><p>其实这道题在Project Euler 所有题目中难度是偏低的，但是想用简单粗暴的方式去解决，性能上会受到限制。当你无法突破这层限制，换种思路去思考，或许就能拨云见日。</p><blockquote><p>题目来源网站：<a href="https://projecteuler.net/" target="_blank" rel="noopener">Project Euler</a></p><p>题目翻译来源于：<a href="http://pe-cn.github.io/24/" target="_blank" rel="noopener">http://pe-cn.github.io/24/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem-24&quot;&gt;&lt;a href=&quot;#Problem-24&quot; class=&quot;headerlink&quot; title=&quot;Problem 24&quot;&gt;&lt;/a&gt;Problem 24&lt;/h2&gt;&lt;h3 id=&quot;字典序排列&quot;&gt;&lt;a href=&quot;#字典序排列&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="Project Euler" scheme="https://sally6.github.io/tags/Project-Euler/"/>
    
      <category term="php" scheme="https://sally6.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Google Maps JavaScript API</title>
    <link href="https://sally6.github.io/2018/01/23/2018-01-23-Google%20Maps%20JavaScript%20API/"/>
    <id>https://sally6.github.io/2018/01/23/2018-01-23-Google Maps JavaScript API/</id>
    <published>2018-01-22T16:00:00.000Z</published>
    <updated>2018-01-26T07:42:24.171Z</updated>
    
    <content type="html"><![CDATA[<h6 id="API接口说明文档"><a href="#API接口说明文档" class="headerlink" title="API接口说明文档"></a>API接口说明文档</h6><ul><li><p><a href="https://developers.google.cn/maps/documentation/javascript/tutorial" target="_blank" rel="noopener">Google Maps JavaScript API帮助文档</a></p></li><li><p><a href="http://www.runoob.com/googleapi/" target="_blank" rel="noopener">菜鸟教程 Google 地图API</a></p></li></ul><p>google地图在web网页中的应用在帮助文档中已经有具体说明，这里不再多说。接下来主要讲解下在调用google 地图过程中需要注意的地方：</p><h6 id="在国内调用API方式"><a href="#在国内调用API方式" class="headerlink" title="在国内调用API方式"></a>在国内调用API方式</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//maps.google.cn/maps/api/js?key=你的秘钥&amp;language=zh-cn"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文档中使用的API链接在国内无法访问的，可以将域名改为<code>maps.google.cn</code>即可正常访问</p><hr><h6 id="标记类聚"><a href="#标记类聚" class="headerlink" title="标记类聚"></a>标记类聚</h6><p>在有些地图API中也叫点聚合，类似效果如图<br><img src="/images/map/map.png" alt="Google maps 标记类聚"></p><p>GitHub 上的 <a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/src/markerclusterer.js" target="_blank" rel="noopener">Google 地图存储区</a>提供了 <code>MarkerClusterer</code> 的 JavaScript 内容库和图片文件。将 GitHub 上的下列文件下载或复制到一个应用可访问的位置：</p><ul><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/src/markerclusterer.js" target="_blank" rel="noopener">markerclusterer.js</a></li><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/images/m1.png" target="_blank" rel="noopener">m1.png</a></li><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/images/m2.png" target="_blank" rel="noopener">m2.png</a></li><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/images/m3.png" target="_blank" rel="noopener">m3.png</a></li><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/images/m4.png" target="_blank" rel="noopener">m4.png</a></li><li><a href="https://github.com/googlemaps/js-marker-clusterer/blob/gh-pages/images/m5.png" target="_blank" rel="noopener">m5.png</a></li></ul><p>示例网站：<a href="http://www.oym56lm.com/ckgy/map.html" target="_blank" rel="noopener">奥玛物流仓储联盟-地图找仓</a></p><hr><h6 id="获取静态地图"><a href="#获取静态地图" class="headerlink" title="获取静态地图"></a>获取静态地图</h6><p>以下内容来源于<a href="http://blog.csdn.net/u011393661/article/details/14130109" target="_blank" rel="noopener">csdn博客</a><br>，API域名稍作调整</p><p>API接口：<a href="http://maps.google.cn/maps/api/staticmap" target="_blank" rel="noopener">http://maps.google.cn/maps/api/staticmap</a></p><p>参数详解</p><p>参数分为几类：</p><ul><li>位置参数：如center, zoom，没有标记（markers）时为必填。</li><li>地图参数：如size（必填）, format, maptype, language。</li><li>特征参数：如markers, path, visible, style。</li><li>报告参数：如seneor（是否使用传感器定位用户）。</li></ul><p><kbd>center</kbd></p><p>定义地图中心，到地图各边缘的距离等。格式可以是{纬度,经度}或字符串地址，可以唯一标识地球表面的具体位置。</p><p>纬度和精度可以精确到6位小数，纬度的范围是[-90, 90]，经度的范围是[-180, 180]。经度值基于到英国格林威治（本初子午线所在地）的位置。</p><p>字符串地址的格式如 City Hall,New York,NY 的形式。发送请求前需使用字符串转义，使之编码为如 City+Hall,New+York,NY 的形式。</p><p>例如显示以北京为中心的一个静态地图：</p><p><img src="/images/map/map_1.png" alt="北京地图"></p><p>代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://maps.google.cn/maps/api/staticmap?center=Beijing&amp;zoom=9&amp;size=256x256&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><kbd>zoom</kbd></p><p>定义地图缩放级别，指定当前试图的分辨率，取值范围是[0,21+]，0表示最低缩放，在地图上可见整个世界，21+可以看到建筑物个体。</p><p><kbd>size</kbd></p><p>指定地图图片矩形尺寸，使用 widthxheight 的形式。大小限制为 640x640。</p><p><kbd>format</kbd></p><p>指定图片格式，默认用PNG图像，可选格式包括：png8/png（默认）、png32, gif, jpg, jpg-baseline（非渐进式JPEG压缩格式）。</p><p>png/gif是无损压缩，jpg/jpg-baseline是有损压缩。大多数JPEG图像采用渐进式载入，即先载入较为粗糙的图像，再随着更多数据的传入而提高图像分辨率，这样可以快速加载网页。但JPEG的某些应用，例如打印要求非渐进式（基线）图片，此时需要选择jpg-baseline格式。</p><p><kbd>maptype</kbd></p><p>定义地图类型，其值可以是：</p><ul><li><code>roadmap</code>（默认）指定标准路线图，如Google Maps网站的默认显示。</li><li><code>satellite</code> 指定卫星图片。</li><li><code>terrain</code> 指定自然地形地图，显示地形和植被。</li><li><code>hybrid</code> 指定卫星和路线图的混合图片，在卫星图片上显示主要街道和地址名称的透明层。</li></ul><p><kbd>language</kbd></p><p>指定地图上标记的显示语言。</p><p><kbd>markers</kbd></p><p>在指定位置添加标记。可以有多个markers。一个markers中的多个参数用&#124;（%7C）分隔。多个标记只要样式相同，就可以放置在同一个markers参数中。如果指定了markers，则可以无需指定center/zoom参数。</p><p>例如以故宫的经纬度获取地图：</p><p><img src="/images/map/map_2.png" alt="标记故宫"><br><img src="/images/map/map_3.png" alt="标记故宫"></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=13&amp;size=256x256&amp;markers=39.917110,116.396971&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br><span class="line"> </span><br><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=13&amp;size=256x256&amp;markers=color:blue%7Clabel:G%7C39.917110,116.396971&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br></pre></td></tr></table></figure></p><p><kbd>path</kbd></p><p>定义图片上叠加层的两个或多个连接点的单条路径。格式为：</p><p>path=pathStyles|pathLocation1|pathLocation2|…<br>其中pathStyles的参数为：</p><ul><li><code>weight</code> 指定路径宽度（以像素为单位），默认5个像素。</li><li><code>color</code> 以24位或32位十六进制指定颜色，或从集合 {black, brown, green, purple, yellow, blue, gray, orange, red, white} 中指定一种颜色。使用32位十六进制，最后2个字符指定8位的Alpha透明值，范围从00（完全透明）到FF（完全不透明）。pathStyles支持透明度，但markers不支持。</li><li><code>fillcolor</code> 闭合区域的填充色。<br>例如划一道从北京到成都的线：</li></ul><p><img src="/images/map/map_4.png" alt="北京到成都"></p><p>代码（以经纬度和字符串形式绘制）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=4&amp;size=256x256&amp;path=39.917110,116.396971%7C30.665629,104.064978&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br><span class="line"> </span><br><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=4&amp;size=256x256&amp;path=Beijing%7CChengdu&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br></pre></td></tr></table></figure></p><p>北京-成都-上海的连线：</p><p><img src="/images/map/map_5.png" alt="北京-成都-上海的连线"><br><img src="/images/map/map_6.png" alt="北京-成都-上海的连线"></p><p>代码（分别用默认样式与自定义样式绘制）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=4&amp;size=256x256&amp;path=Beijing%7CChengdu&amp;path=Chengdu%7CShanghai&amp;path=Shanghai%7CBeijing&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br><span class="line"> </span><br><span class="line">http://maps.google.cn/maps/api/staticmap?zoom=4&amp;size=256x256&amp;path=color:red%7CBeijing%7CChengdu&amp;path=color:purple%7CChengdu%7CShanghai&amp;path=Shanghai%7CBeijing&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br></pre></td></tr></table></figure></p><p>使用填充色。例如绘制上海的经济辐射区域：</p><p>Google静态地图API详解 - ShaneJhu - 逆风的方向 更适合飞翔</p><p><img src="/images/map/map_7.png" alt="绘制上海的经济辐射区域"></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://maps.google.com/maps/api/staticmap?zoom=6&amp;size=256x256&amp;path=fillcolor:yellow%7CShanghai%7CYangzhou%7CNanjing%7CHangzhou%7CShanghai&amp;maptype=roadmap&amp;language=zh-CN&amp;sensor=false</span><br></pre></td></tr></table></figure></p><p><kbd>visible</kbd></p><p>指定一个位置，即使不显示标记或其他指示器也应该在地图上保持可见。用此参数确保在静态地图上显示某些特征或地图位置。</p><p><kbd>style</kbd></p><p>用于自定义样式以更改地图的特定地图项（如道路、公园等）的显示方式。可以添加多个style参数。格式：</p><p>style=feature:featureArgument|element:elementArgument|rule:ruleArgument…<br>style的参数：</p><ul><li>feature 设置地图项</li><li>element 设置地图项子集</li><li>规则 定义更细致的显示样式</li></ul><p><code>feature</code>的设置（完整列表见Google Maps Javascript API）：</p><ul><li>feature:all （默认） 所有地图项</li><li>feature:road 所有道路</li><li>feature:landscape 所有背景地貌（通常为道路间的区域）</li></ul><p><code>element</code>的设置：</p><ul><li>element:all （默认）选择该地图项的所有元素</li><li>element:geometry 只选择地理元素</li><li>element:labels 只选择与该地图项关联的文本标签</li></ul><p>样式规则设置：</p><ul><li>hue（0xRRGGBB格式的RGB十六进制字符串），选择项的基本颜色。</li><li>lightness（[-100, 100]间的浮点值），亮度变化百分比。负值增加暗度（-100为黑），正值增加亮度（+100为白）。</li><li>saturation（[-100, 100]间的浮点值），颜色色度变化百分比。</li><li>gamma（[0.01, 10.0]间的浮点值，1.0表示不应用任何校正），灰度校正值。灰度系数以非线性方式修改色相亮度，而不会影响白色值或黑色值。灰度系数通常用于修改多个元素的对比度。可以通过gamma值来提高（<1.0）或降低（>1.0）元素边缘与内部间的对比度。</1.0）或降低（></li><li>inverse_lightness:true 颠倒现有的亮度。<br>visibility（on, off, simplified）用于表示元素是否在地图上出现及其出现方式。</li></ul><p><kbd>sensor</kbd></p><p>sensor（必填）是否使用传感器确定用户位置，可以设置为true或false。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;API接口说明文档&quot;&gt;&lt;a href=&quot;#API接口说明文档&quot; class=&quot;headerlink&quot; title=&quot;API接口说明文档&quot;&gt;&lt;/a&gt;API接口说明文档&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developers.googl
      
    
    </summary>
    
    
      <category term="Google Maps" scheme="https://sally6.github.io/tags/Google-Maps/"/>
    
      <category term="静态地图" scheme="https://sally6.github.io/tags/%E9%9D%99%E6%80%81%E5%9C%B0%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>php+JS定时器推送消息</title>
    <link href="https://sally6.github.io/2018/01/19/2018-01-19-JS%E5%AE%9A%E6%97%B6%E5%99%A8%E6%8E%A8%E9%80%81%E6%B6%88%E6%81%AF/"/>
    <id>https://sally6.github.io/2018/01/19/2018-01-19-JS定时器推送消息/</id>
    <published>2018-01-18T16:00:00.000Z</published>
    <updated>2018-01-19T09:56:54.776Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p>如果有用户注册会员或发布信息，管理员在后台能即时收到消息提醒，即不刷新页面，在后台后下方即时弹出用户动态信息</p><h2 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h2><p>用户在前台页面注册成功后，便生成缓存信息<br>在push_tips.js.php脚本文件中去获取缓存，如果缓存存在，则弹出缓存中的信息，同时删除缓存<br>在后台页面公共底部，通过js定时执行push_tips.js.php脚本文件</p><p>1、生成待推送消息缓存<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">push_tips</span><span class="params">($code, $regid, $param = array<span class="params">()</span>, $url = <span class="string">''</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $dc, $DT_TIME, $DT;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断后台是否开启推送功能</span></span><br><span class="line">    <span class="keyword">if</span>(!$DT[<span class="string">'pushtips_time'</span>]) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    $code = trim($code); </span><br><span class="line">    $regid *= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($code) || $regid&lt;<span class="number">1</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    $node_info = cache_read(<span class="string">"node_$code.php"</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($node_info)) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(!$node_info[<span class="string">'expire'</span>]) <span class="keyword">return</span> <span class="number">4</span>; <span class="comment">//判断该节点是否开启</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($node_info[<span class="string">'group_'</span>.$regid])) <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">    </span><br><span class="line">    $desc = format_tips($node_info[<span class="string">'template'</span>], $param);</span><br><span class="line">    $tips = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'desc'</span> =&gt; $desc,</span><br><span class="line">        <span class="string">'addtime'</span> =&gt; $DT_TIME,</span><br><span class="line">        <span class="string">'url'</span> =&gt; $url,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">    $admins = get_admins_by_roles($node_info[<span class="string">'group_'</span>.$regid]);</span><br><span class="line">    $cache_key = <span class="string">'node_'</span>.$code;</span><br><span class="line">    $expire = $node_info[<span class="string">'expire'</span>] * <span class="number">3600</span>;</span><br><span class="line">    $fail_num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($admins <span class="keyword">as</span> $v) &#123;</span><br><span class="line">        $key = $cache_key.<span class="string">'_'</span>.$v;               </span><br><span class="line">        <span class="keyword">if</span> ($temp_tips = $dc-&gt;get($key)) &#123;</span><br><span class="line">            $tips[<span class="string">'num'</span>] = $temp_tips[<span class="string">'num'</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $tips[<span class="string">'num'</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!$dc-&gt;set($key, $tips, $expire))&#123;</span><br><span class="line">            $fail_num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($fail_num)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"生成缓存失败&#123;$fail_num&#125;次"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'ok'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2、查询缓存php脚本<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'../common.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取管理员ID</span></span><br><span class="line">$secretkey = <span class="string">'admin_'</span>.strtolower(substr(DT_KEY, <span class="number">-6</span>));</span><br><span class="line"><span class="keyword">if</span>($CFG[<span class="string">'authadmin'</span>] == <span class="string">'cookie'</span>) &#123;</span><br><span class="line">    $_destoon_admin = get_cookie($secretkey);</span><br><span class="line">    $_destoon_admin = $_destoon_admin ? intval($_destoon_admin) : <span class="number">0</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $session = <span class="keyword">new</span> dsession();</span><br><span class="line">    $_destoon_admin = <span class="keyword">isset</span>($_SESSION[$secretkey]) ? intval($_SESSION[$secretkey]) : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$userid = $_destoon_admin;</span><br><span class="line"><span class="keyword">if</span>($userid==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">$node_arr = cache_read(<span class="string">'node_codes.php'</span>);</span><br><span class="line">$html_str = $js_str = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($node_arr <span class="keyword">as</span> $v)&#123;</span><br><span class="line">    $key = <span class="string">"node_&#123;$v&#125;_&#123;$userid&#125;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($tips = $dc-&gt;get($key))&#123;</span><br><span class="line">        $dc-&gt;rm($key); <span class="comment">//清除缓存</span></span><br><span class="line"></span><br><span class="line">        $desc = $tips[<span class="string">'desc'</span>];</span><br><span class="line">        <span class="keyword">if</span>($tips[<span class="string">'num'</span>]&gt;<span class="number">1</span>)&#123; </span><br><span class="line">            $desc .= <span class="string">"&lt;br&gt;累计出现此类新消息&#123;$tips['num']&#125;条"</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($tips[<span class="string">'url'</span>]) &amp;&amp; !<span class="keyword">empty</span>($tips[<span class="string">'url'</span>])) &#123;</span><br><span class="line">            $desc = <span class="string">'&lt;a href="'</span>.$tips[<span class="string">'url'</span>].<span class="string">'"&gt;'</span>.$desc.<span class="string">'&lt;/a&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $html_str .= <span class="string">'&lt;div class="tip_box" id="'</span>.$key.<span class="string">'"&gt;&lt;div class="tip_tit"&gt;&lt;h3&gt;提示信息&lt;/h3&gt;&lt;span class="close"&gt;×&lt;/span&gt;&lt;/div&gt;&lt;div class="tip_con" id="tip_con"&gt;'</span>.$desc.<span class="string">'&lt;/div&gt;&lt;/div&gt;'</span>;</span><br><span class="line">        <span class="keyword">break</span>;  <span class="comment">//每次只弹出一条消息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($html_str)&#123;</span><br><span class="line">    <span class="comment">//$html_str = str_replace(PHP_EOL, '', $html_str); //去掉换行符</span></span><br><span class="line">    $js_str = <span class="string">&lt;&lt;&lt;JQUERY</span></span><br><span class="line"><span class="string">$('#tip_p_box .tip_box').hide(500);</span></span><br><span class="line"><span class="string">$('#tip_p_box').html('<span class="subst">$html_str</span>');</span></span><br><span class="line"><span class="string">$('#tip_p_box .tip_box').show(1000);</span></span><br><span class="line"><span class="string">JQUERY;</span></span><br><span class="line">    <span class="keyword">echo</span> $js_str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、在前端页面写js定时执行php脚本代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#tip_p_box"</span>).on(<span class="string">'click'</span>,<span class="string">'.close'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).parents(<span class="string">'.tip_box'</span>).hide(<span class="number">500</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">pushTips</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">'#aoma_tips'</span>).remove();</span><br><span class="line">        s = <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</span><br><span class="line">        s.type = <span class="string">"text/javascript"</span>;</span><br><span class="line">        s.id = <span class="string">"aoma_tips"</span>;</span><br><span class="line">        s.src = DTPath+<span class="string">"api/push_tips.js.php?refresh="</span>+<span class="built_in">Math</span>.random()+<span class="string">".js"</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pushTips();</span><br><span class="line">    <span class="built_in">window</span>.setInterval(<span class="string">'pushTips()'</span>,&lt;?php echo $DT[<span class="string">'pushtips_time'</span>]; ?&gt;*<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求说明&quot;&gt;&lt;a href=&quot;#需求说明&quot; class=&quot;headerlink&quot; title=&quot;需求说明&quot;&gt;&lt;/a&gt;需求说明&lt;/h2&gt;&lt;p&gt;如果有用户注册会员或发布信息，管理员在后台能即时收到消息提醒，即不刷新页面，在后台后下方即时弹出用户动态信息&lt;/p&gt;
&lt;h2
      
    
    </summary>
    
    
      <category term="JS" scheme="https://sally6.github.io/tags/JS/"/>
    
      <category term="PHP" scheme="https://sally6.github.io/tags/PHP/"/>
    
  </entry>
  
</feed>
